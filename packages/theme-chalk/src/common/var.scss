@use '../mixins//var';
@use 'sass:map';
@use 'sass:color';
@use 'sass:math';

$colors: () !default;

// map.deep-merge https://sass-lang.com/documentation/modules/map/#deep-merge
$colors: map.deep-merge(
  (
      'white': #fff,
      'black': #000,
      'primary': (
        'base': #409eff,
      ),
      'success': (
        'base': #67c23a,
      ),
      'warning': (
        'base': #e6a23c,
      ),
      'danger': (
        'base': #f56c6c,
      ),
      'error': (
        'base': #f56c6c,
      ),
      'info': (
        'base': #909399,
      ),
    )
    $colors
);

$color-white: map.get($colors, 'white') !default;
$color-black: map.get($colors, 'black') !default;
$color-primary: map.get($colors, 'primary', 'base') !default;
$color-success: map.get($colors, 'success', 'base') !default;
$color-warning: map.get($colors, 'warning', 'base') !default;
$color-danger: map.get($colors, 'danger', 'base') !default;
$color-error: map.get($colors, 'error', 'base') !default;
$color-info: map.get($colors, 'info', 'base') !default;

@mixin set-color-mix-level(
  $type,
  $number,
  $mode: 'light',
  $mix-color: $color-white
) {
  $colors: map.deep-merge(
    (
      $type: (
        '#{$mode}-#{$number}':
          color.mix(
            $mix-color,
            map.get($colors, $type, 'base'),
            math.percentage(math.div($number, 10))
          ),
      ),
    ),
    $colors
  ) !global; // 将局部变量转换为全局变量
}

@mixin set-css-color-type($colors, $type) {
  // 生成 --el-color-#{$type}
  @include set-css-var-value(('color', $type), map.get($colors, $type, 'base'));
}
