@use 'function' as *;
@use 'sass:map';

/// ## 设置css 变量
/// @param {List} $name - 颜色的变量名
/// @param {type} $value - 颜色的值
/// @output --el-button-text-color: $value
@mixin set-css-var-value($name, $value) {
  // @debug '#{joinVarName($name)}: #{$value} ';
  #{joinVarName($name)}: #{$value};
}

/// ## 生成组件css变量
/// @param {type} $namespace -
/// @param {type} $variables -
/// @output -
@mixin set-component-css-var($namespace, $variables) {
  // @debug '生成组件css变量';
  @each $attribute, $value in $variables {
    // @debug '生成组件css变量attribute #{$attribute}';
    @if $attribute == 'default' {
      #{getCssVarName($name)}: #{$value};
      // @debug '循环组件变量值1  #{getCssVarName($name)}: #{$value}';
    } @else {
      #{getCssVarName($namespace,$attribute)}: #{$value};
      // @debug '循环组件变量值2  #{getCssVarName($namespace,$attribute)}: #{$value}';
    }
  }
}

/// ## generate css var from existing css var
/// @param {type} $var -('button', 'text-color')
/// @param {type} $gVar -('color', $type)
/// @output -  --el-button-text-color: var(--el-color-#{$type});
@mixin css-var-from-global($var, $gVar) {
  $varName: joinVarName($var);
  $gVarName: joinVarName($gVar);
  #{$varName}: var(#{$gVarName});

  // @debug '#{$varName}: var(#{$gVarName})';
}

///
/// @param {String} $colors -
/// @param {String} $type -
@mixin set-css-color-type($colors, $type) {
  // @debug 'set-css-color-type';
  // @debug 'set-css-color-type: #{ map.get($colors, $type, 'base')}';
  // 生成 --el-color-#{$type}
  @include set-css-var-value(('color', $type), map.get($colors, $type, 'base'));
  // 生成 --el-color-#{$type}-light-{$i}
  @each $i in (3, 5, 7, 8, 9) {
    @include set-css-var-value(
      ('color', $type, 'light', $i),
      map.get($colors, $type, 'light-#{$i}')
    );
  }
  // 生成 --el-color-#{$type}-dark-2
  @include set-css-var-value(
    ('color', $type, 'dark-2'),
    map.get($colors, $type, 'dark-2')
  );
}

@mixin set-color-mix-level(
  $type,
  $number,
  $mode: 'light',
  $mix-color: $color-white
) {
  $colors: map.deep-merge(
    (
      $type: (
        '#{$mode}-#{$number}':
          color.mix(
            $mix-color,
            map.get($colors, $type, 'base'),
            math.percentage(math.div($number, 10))
          ),
      ),
    ),
    $colors
  ) !global; // 将局部变量转换为全局变量
}
